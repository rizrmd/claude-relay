# Clay Configuration File
# Clay generates Claude CLI's config.json and mcp.json from this file

# Initial context that will be injected into every Claude conversation
context: |
  You are an expert developer working with Clay, a Rust-based OpenAI-compatible API server.
  Always follow Rust best practices and maintain high code quality.
  
  Project Overview:
  - Clay acts as a bridge between OpenAI-compatible clients and Claude CLI
  - It manages portable installations and process lifecycle
  - Supports MCP (Model Context Protocol) servers for enhanced capabilities
  - Uses ../clay-mcp for custom MCP server implementations

# MCP Server Configuration
# Clay will generate Claude CLI's mcp.json from this configuration
mcp:
  servers:
    # File system access
    filesystem:
      command: "npx"
      args: ["-y", "@modelcontextprotocol/server-filesystem", "."]
      env:
        NODE_ENV: "production"
      metadata:
        description: "File system access for the current project"
        version: "1.0.0"
    
    # Custom clay-mcp server for enhanced capabilities
    clay_mcp:
      command: "node"
      args: ["../clay-mcp/index.js"]
      env:
        NODE_ENV: "production"
        CLAY_PROJECT_DIR: "."
      metadata:
        description: "Clay-specific MCP server with enhanced project integration"
        version: "1.0.0"
        provider: "clay"

# Clay Server Configuration
server:
  port: 3000
  max_processes: 100
